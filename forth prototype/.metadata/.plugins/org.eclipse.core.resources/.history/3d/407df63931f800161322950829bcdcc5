import javafx.animation.*;
import javafx.animation.*;
import javafx.application.Application;
import javafx.beans.*;
import javafx.beans.binding.Bindings;
import javafx.beans.property.*;
import javafx.beans.value.WritableIntegerValue;
import javafx.event.*;
import javafx.geometry.Pos;
import javafx.scene.*;
import javafx.scene.control.*;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
import javafx.util.Duration;

public class TimerV2 extends Application {
	@Override public void start(final Stage stage) throws Exception{
		//final CountDown countDown = new CountDown(10);
		//final CountDownLabal countDownLabel = new CountDownLabel(countDown);
		
		final Button countDownButton = new Button(" Start ");
		//final Button stopButton = new Button(" Stop ");
		countDownButton.setOnAction(new EventHandler<ActionEvent>() {
			@Override public void handle(ActionEvent t) {
				countdownButton.setText("Restart");
				
				//countDown.start();
			}
		});
//	    stopButton.setOnAction(new EventHandler<ActionEvent>() {
//	    	@Override public void handle(ActionEvent t){
//	    		countdown.stop();
//	    	}
//	    });
	    
	    VBox layout = new VBox(10);
	    layout.getChildren().addAll(countdownLabel, countdownButton, /*stopButton*/);
	    layout.setAlignment(Pos.BASELINE_RIGHT);
	    layout.setStyle("-fx-background-color: cornsilk; -fx-padding: 20; -fx-font-size: 20;");

	    stage.setScene(new Scene(layout));
	    stage.show();
	  }

  public static void main(String[] args) throws Exception {
	   launch(args);
  }
}


class CountDownLabel extends Label {
	public CountDownLabel(final CountDown countDown){
		
		textProperty().bind(Bindings.format("%02d : %02d", countDown.getMinsLeft(), countDown.getSecsLeft()));
	}
}

class CountDown {
	private int totalTime;
	private int secsLeft;
	private int minsLeft;
	
	public int getSecsLefts(){
		return secsLeft;
	}
	
	public int getMinsLeft(){
		return minsLeft;
	}
	
	public CountDown(final int time) {
		
		totalTime = time * 60;
		while(totalTime > 0){
			secsLeft = totalTime % 60;
			minsLeft = totalTime / 60;
			totalTime--;
			Thread.sleep(1000);
		}
	}
}
